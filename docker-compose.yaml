version: '3.2'

services:

  elasticsearch:
    build:
      context: docker-compose-support/elasticsearch/
      args:
        ELK_VERSION: 7.5.0
    restart: always
    volumes:
      - type: bind
        source: ./docker-compose-support/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      ELASTIC_PASSWORD: changeme
    logging:
      driver: "none"
    networks:
      - app

  logstash:
    build:
      context: docker-compose-support/logstash/
      args:
        ELK_VERSION: 7.5.0
    restart: always
    volumes:
      - type: bind
        source: ./docker-compose-support/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./docker-compose-support/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "6000:6000"
      - "6001:6001"
      - "6002:6002"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    logging:
      driver: "none"
    networks:
      - app

  kibana:
    build:
      context: docker-compose-support/kibana/
      args:
        ELK_VERSION: 7.5.0
    restart: always
    volumes:
      - type: bind
        source: ./docker-compose-support/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - logstash
      - elasticsearch
    logging:
      driver: "none"
    networks:
      - app

networks:
  app:

volumes:
  elasticsearch: